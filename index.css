body {
  margin: 20px 40px;
}

p {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 0px;
  margin-top: 16px;
}

/*--- This is the CSS class for the green rectangular blocks. Note that it uses display: flex ---*/
.wrapper {
  display: flex;
  height: 60px;
  background-color: green;
  margin-bottom: 20px;
}

/*--- flex: 1 makes it so that the div takes up all available space left in the parent element ---*/
.redExample {
  flex: 1;
  background-color: red;
}

/*--- Since both .redExample and .blueExample have flex: 1, they will take up an equal amount of space because they meet in the middle ---*/
.blueExample {
  flex: 1;
  background-color: blue;
}

/*--- flex-direction: row-reverse orders all child elements starting from right to left ---*/
.emptyExample2 {
  display: flex;
  flex: 1;
  flex-direction: row-reverse;
}

.blueExample2 {
  width: 80px;
  background-color: blue;
}

.row3red{
  display: flex;
  flex: 0 0 80px;
  background-color: red;
}
.row3blue{
  width: 80px;
  background-color: blue;
}
.space-between{
  justify-content: space-between;
}
.row4blue{
  width: 80px;
  background-color: blue;
  
}
.row4red{
  flex: 1;
  background-color: red;  
}

.square{
  background-color: red;
  width: 45px;
  height: 45px;
  margin: 7.5px auto;  
}
.row6blue{
  width: 80px;
  height: 60px;
  background-color: blue;
  margin: 0 auto;
}
.row6red{
  background-color: red;
  flex: 1;
}
.row7red{
  width: 80px;
  height: 60px;
  background-color: red;
}
.row7blue{
  display: flex;
  flex: 1;
  background-color: blue;  
  align-items: center;
}
.row7green{
  height: 20px;
  flex: 1;
  background-color: green;  
}
.row8orange{  
  width: 80px;
  background-color: orange;
}
.row9orange{
  width: calc((100% - 80px) / 5);
  background-color: orange;
}
/* TODO: Add CSS for the rest of your solution below */